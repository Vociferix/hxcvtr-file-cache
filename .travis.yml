language: rust

cache:
  directories:
    - $HOME/.cargo

before_cache:
  - rm -rf $HOME/.cargo/registry

env:
os:
  - linux
  - osx
  - windows
rust:
  - stable
  - beta
  - nightly


matix:
  fast_finish: true
  allow_failures:
    - nightly

addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev

before_script:
  - rustup component add clippy
  - rustup component add fmt

script: |
  export RUST_BACKTRACE=1 &&
  cargo build --verbose &&
  cargo clippy --verbose &&
  cargo fmt -- --check &&
  cargo test --verbose &&
  cargo doc --no-deps --verbose

after_success: |
  if [[ "$TRAVIS_OS_NAME" == linux && "$TRAVIS_RUST_VERSION" == stable ]]; then
    wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
    tar xzf master.tar.gz &&
    cd kcov-master &&
    mkdir build &&
    cd build &&
    cmake .. &&
    make &&
    make install DESTDIR=../../kcov-build &&
    cd ../.. &&
    rm -rf kcov-master &&
    for file in target/debug/examplerust-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
    bash <(curl -s https://codecov.io/bash) &&
    echo "Uploaded code coverage"
  fi
